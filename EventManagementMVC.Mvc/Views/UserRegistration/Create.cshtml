@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model EventManagementMVC.Models.UserRegistration

@{
    ViewBag.Title = "User Registration";
}

@if (!string.IsNullOrEmpty(ViewBag.Message as string))
{
    <div class="alert alert-info">@ViewBag.Message</div>
}

<h2>Create User</h2>

@using (Html.BeginForm("Create", "UserRegistration", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserName, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserEmail, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserEmail, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Age, new { type = "number", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Age, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Gender,
            new SelectList(new List<string> { "Male", "Female" }),
                "-- Select Gender --",
                new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Gender, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.PhoneNumber, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Address, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.City, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.City, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.State, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.State, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.State, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(m => m.Pincode, new { type = "number", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Pincode, null, new { @class = "text-danger" })
    </div>
</div>

@* <div class="form-group">
        @Html.LabelFor(m => m.Role.RoleID, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Role.RoleID, ViewBag.Roles as SelectList, "--Select Role--", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Role.RoleID, "", new { @class = "text-danger" })
        </div>
    </div> *@

<div class="form-group">
    @Html.LabelFor(m => m.RoleID, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.RoleID, ViewBag.Roles as SelectList, "--Select Role--", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.RoleID, "", new { @class = "text-danger" })
    </div>
</div>


<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a href="@Url.Action("Login", "Login")" class="btn btn-default">Back to Login</a>
    </div>
</div>
}


